repo = "github.com/iikira/BaiduPCS-Go"
rule = "codelingo/go/unchecked-type-assertion"
sha = "52394a677126a284baea7199271838037a79342f"

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/reflect_marshaler.go"
  fileline = 211
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/reflect_struct_decoder.go"
  fileline = 39
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/reflect_marshaler.go"
  fileline = 142
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "cmd/AndroidNDKBuild/main.go"
  fileline = 115
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/any_object.go"
  fileline = 332
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/reflect_extension.go"
  fileline = 279
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/golang/protobuf/proto/lib.go"
  fileline = 699
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/golang/protobuf/proto/table_marshal.go"
  fileline = 229
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/reflect.go"
  fileline = 108
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/any.go"
  fileline = 302
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/any_object.go"
  fileline = 213
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/golang/protobuf/proto/lib.go"
  fileline = 682
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "pcsutil/checksum/checksum.go"
  fileline = 195
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "pcsutil/checksum/checksum.go"
  fileline = 192
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "internal/pcscommand/export.go"
  fileline = 134
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/golang/protobuf/proto/message_set.go"
  fileline = 146
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/reflect_extension.go"
  fileline = 325
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/iikira/Baidu-Login/util.go"
  fileline = 27
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/reflect_struct_decoder.go"
  fileline = 33
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/reflect_optional.go"
  fileline = 20
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/peterh/liner/line.go"
  fileline = 661
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/golang/protobuf/proto/lib.go"
  fileline = 654
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "pcsutil/addr.go"
  fileline = 14
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/golang/protobuf/proto/lib.go"
  fileline = 689
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/peterh/liner/line.go"
  fileline = 443
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/reflect_dynamic.go"
  fileline = 37
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/any.go"
  fileline = 232
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/dgrijalva/jwt-go/map_claims.go"
  fileline = 56
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/olekukonko/tablewriter/table_with_color.go"
  fileline = 86
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "baidupcs/expires/cachemap/cachemap.go"
  fileline = 31
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/golang/protobuf/proto/lib.go"
  fileline = 676
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/reflect_map.go"
  fileline = 13
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "baidupcs/expires/cachemap/cacheunit.go"
  fileline = 52
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "pcsutil/checksum/checksum.go"
  fileline = 211
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/reflect_marshaler.go"
  fileline = 187
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/golang/protobuf/proto/lib.go"
  fileline = 642
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/golang/protobuf/proto/lib.go"
  fileline = 648
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/reflect_slice.go"
  fileline = 11
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/golang/protobuf/proto/table_marshal.go"
  fileline = 324
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/bitly/go-simplejson/simplejson.go"
  fileline = 79
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "requester/fetch.go"
  fileline = 50
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/modern-go/reflect2/type_map.go"
  fileline = 71
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "baidupcs/extends.go"
  fileline = 357
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/golang/protobuf/proto/lib.go"
  fileline = 669
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "requester/fetch.go"
  fileline = 88
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/peterh/liner/input_windows.go"
  fileline = 319
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/any.go"
  fileline = 296
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "internal/pcscommand/upload.go"
  fileline = 225
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/reflect_extension.go"
  fileline = 335
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/dgrijalva/jwt-go/ecdsa.go"
  fileline = 103
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/any_object.go"
  fileline = 77
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/reflect_optional.go"
  fileline = 10
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/peterh/liner/line.go"
  fileline = 577
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/golang/protobuf/proto/table_marshal.go"
  fileline = 172
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/dgrijalva/jwt-go/rsa_pss.go"
  fileline = 105
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/reflect_json_number.go"
  fileline = 26
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/golang/protobuf/proto/clone.go"
  fileline = 51
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/golang/protobuf/proto/properties.go"
  fileline = 394
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/golang/protobuf/proto/lib.go"
  fileline = 705
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/golang/protobuf/proto/properties.go"
  fileline = 491
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/dgrijalva/jwt-go/ecdsa.go"
  fileline = 69
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/peterh/liner/line.go"
  fileline = 560
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/dgrijalva/jwt-go/map_claims.go"
  fileline = 23
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/golang/protobuf/proto/table_unmarshal.go"
  fileline = 411
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/reflect_slice.go"
  fileline = 17
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/reflect_array.go"
  fileline = 17
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/pool.go"
  fileline = 33
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/bitly/go-simplejson/simplejson.go"
  fileline = 98
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/modern-go/reflect2/type_map.go"
  fileline = 38
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/golang/protobuf/proto/text_parser.go"
  fileline = 550
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/urfave/cli/app.go"
  fileline = 519
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "requester/fetch.go"
  fileline = 79
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/peterh/liner/line.go"
  fileline = 1058
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "requester/uploader/multiworker.go"
  fileline = 64
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/peterh/liner/input_windows.go"
  fileline = 67
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/any_array.go"
  fileline = 245
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/any_array.go"
  fileline = 103
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/dgrijalva/jwt-go/map_claims.go"
  fileline = 36
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/reflect_map.go"
  fileline = 26
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "internal/pcscommand/download.go"
  fileline = 396
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "internal/pcscommand/export.go"
  fileline = 207
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "baidupcs/expires/cachemap/cacheunit.go"
  fileline = 31
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/reflect_extension.go"
  fileline = 360
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "baidupcs/expires/cachemap/cacheunit.go"
  fileline = 41
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/reflect_marshaler.go"
  fileline = 205
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/golang/protobuf/proto/table_unmarshal.go"
  fileline = 366
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "pcsutil/checksum/checksum_write.go"
  fileline = 118
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/dgrijalva/jwt-go/rsa_pss.go"
  fileline = 83
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/reflect_array.go"
  fileline = 11
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/golang/protobuf/proto/extensions.go"
  fileline = 96
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/config.go"
  fileline = 174
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."

[[issues]]
  filepath = "vendor/github.com/json-iterator/go/pool.go"
  fileline = 20
  comment = "Unchecked type assertions can cause panics. Check for success with the x, ok := y.(type) style."
